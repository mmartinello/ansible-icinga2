---
# Check client state file

- include_tasks: client-check-Linux.yml
  when: ansible_system == "Linux"
  tags: ['configure-client']

- include_tasks: client-check-Windows.yml
  when: ansible_os_family == "Windows"
  tags: ['configure-client']

- set_fact:
    icinga2_client_configured: true
  when: icinga2_client_file.stat.exists == True and icinga2_client_reinstall == False
  tags: ['configure-client']


# Client registration on master if not registered

- name: Generate a new key and CSR for new satellite on icinga server
  shell: cd /tmp && icinga2 pki new-cert --cn {{ inventory_hostname }} --key /tmp/{{ inventory_hostname }}.key --csr /tmp/{{ inventory_hostname }}.csr
  delegate_to: "{{ icinga2_master_inventory_hostname }}"
  become: true
  when: icinga2_client_configured == False
  tags: ['configure-client']

- name: Sign the certificate with the master CA certificate on the master node
  shell: icinga2 pki sign-csr --csr /tmp/{{ inventory_hostname }}.csr --cert /tmp/{{ inventory_hostname }}.crt
  delegate_to: "{{ icinga2_master_inventory_hostname }}"
  become: true
  when: icinga2_client_configured == False
  tags: ['configure-client']

- name: Download the CA certificate from Icinga master node
  fetch:
    src: /var/lib/icinga2/ca/ca.crt
    dest: "/tmp/ansible/{{ inventory_hostname }}/icinga/ca.crt"
    flat: yes
  delegate_to: "{{ icinga2_master_inventory_hostname }}"
  become: true
  when: icinga2_client_configured == False
  tags: ['configure-client']

- name: Get files to be downloaded
  shell: "ls /tmp/{{ inventory_hostname }}.*"
  register: files_to_be_downloaded
  delegate_to: "{{ icinga2_master_inventory_hostname }}"
  become: true
  when: icinga2_client_configured == False
  tags: ['configure-client']

- name: Download certificates from Icinga master node
  fetch:
    src: "{{item}}"
    dest: "/tmp/ansible/{{ inventory_hostname }}/icinga/"   
    flat: yes
  with_items: "{{ files_to_be_downloaded.stdout_lines }}" 
  delegate_to: "{{ icinga2_master_inventory_hostname }}"
  become: true
  when: icinga2_client_configured == False
  tags: ['configure-client']

- name: Delete temporary files from Icinga master node
  shell: "rm /tmp/{{ inventory_hostname }}.*"
  delegate_to: "{{ icinga2_master_inventory_hostname }}"
  become: true
  when: icinga2_client_configured == False
  tags: ['configure-client']


# Configure client on Linux and Windows

- include_tasks: client-configure-Linux.yml
  when: ansible_system == "Linux"
  tags: ['configure-client']

- include_tasks: client-configure-Windows.yml
  when: ansible_os_family == "Windows"
  tags: ['configure-client']


# Delete temp files, configure client on master and set client state file

- name: Delete temporary files from Ansible host
  local_action:
    module: file
    path: "/tmp/ansible/{{ inventory_hostname }}"
    state: absent
  become: false
  when: icinga2_client_configured == False
  tags: ['configure-client']

- name: Configure the client file on Icinga master server
  vars:
    client_distro: "{{ icinga2_client_distro|default(ansible_distribution) }}"
  template:
    src: client-host.conf.j2
    dest: "{{ config_root_dir }}/zones.d/{{ icinga2_master_host }}/{{ inventory_hostname }}.conf"
    owner: root
    group: root
    mode: 0644
  delegate_to: "{{ icinga2_master_inventory_hostname }}"
  become: true
  notify: Reload Icinga on master server
  tags: ['configure-client', 'client-conf']

- name: Create the client configuration state file
  file:
    path: /root/.icinga2_client_configured
    state: touch
  when: icinga2_client_configured == False and ansible_system == "Linux"
  tags: ['configure-client']

- name: Create the client configuration state file
  win_file:
    path: "{{ win_config_root_dir }}\\.icinga2_client_configured"
    state: touch
  when: icinga2_client_configured == False and ansible_os_family == "Windows"
  tags: ['configure-client']
